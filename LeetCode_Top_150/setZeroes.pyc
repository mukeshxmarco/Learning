# constant space solution
class Solution:
    def setZeroes(self, matrix: List[List[int]]) -> None:
        """
        Do not return anything, modify matrix in-place instead.
        """
        for i,row in enumerate(matrix):
            for j,col in enumerate(row):
                print(j,col)
                if col==0:
                    for k in range(len(row)):
                        matrix[i][k]="zero" if matrix[i][k]!=0 else 0
                    
                    for r in range(len(matrix)):
                        matrix[r][j]="zero" if matrix[r][j]!=0 else 0

        for i in range(len(matrix)):
            for j in range(len(matrix[i])):
                if matrix[i][j]=='zero':
                    matrix[i][j]=0


# Solution 2 - Space - O(m)
# m - count of 0's in matrix
class Solution:
    def setZeroes(self, matrix: List[List[int]]) -> None:
        """
        Do not return anything, modify matrix in-place instead.
        """
        l_c = []

        for i in range(len(matrix)):
            for j in range(len(matrix[i])):
                if matrix[i][j] == 0:
                    l_c.append(j)

        for i in range(len(matrix)):
            if 0 in matrix[i]:
                for ii in range(len(matrix[i])):
                    matrix[i][ii] = 0
            else:
                for _ in l_c:
                    matrix[i][_] = 0
        return matrix

